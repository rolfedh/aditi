# Recent commits data for Jekyll
# Auto-generated by GitHub Actions
commits:
- sha: "d2a3f859028ac88b6deaf47e96bbaf7c09925680"
  date: "July 27, 2025"
  author: "Rolfe Dlugy-Hegwer"
  subject: "Fix formatting inconsistencies in Phase 2 mockup documentation"
  body: ""

- sha: "35aa87e6b684f1a42cd724fb461093174c931c1d"
  date: "July 27, 2025"
  author: "GitHub Action"
  subject: "Update recent commits data [skip ci]"
  body: ""

- sha: "d29c4d2b7743376091a12e8511d568d3687c5ca2"
  date: "July 27, 2025"
  author: "Rolfe Dlugy-Hegwer"
  subject: "Add Phase 2 CLI interaction mockup demonstrating user workflow"
  body: "Created comprehensive mockup showing typical user interactions with Aditi CLI
from initial setup through successful migration completion.

## Key Scenarios Demonstrated

### 1. Initial Setup & Discovery
- First-time user experience with help and version commands
- Vale initialization with container setup
- Initial check revealing scope of migration work

### 2. Interactive Journey Command
- Repository configuration with subdirectory permissions
- Feature branch creation with git guidance
- Step-by-step workflow with user control

### 3. Rule Processing Examples
- **EntityReference** (Fully Deterministic): Automatic fixes with review
- **ContentType** (Partially Deterministic): Smart detection with confirmation
- **TaskSection** (Non-Deterministic): Manual intervention with TODO markers

### 4. Git Integration & PR Creation
- Non-invasive git command suggestions
- Commit message generation
- Pull request template with comprehensive details

### 5. Progress Tracking
- Visual feedback with progress bars and statistics
- Subsequent runs showing incremental improvements
- Clear indication of remaining work

## Design Principles

- **Progressive Disclosure**: Complexity revealed as needed
- **User Control**: Git operations suggested, never automated
- **Visual Feedback**: Rich terminal output with colors and emojis
- **Smart Defaults**: Intelligent suggestions based on file analysis
- **Clear Guidance**: Always shows next steps

The mockup demonstrates a realistic workflow where a technical writer
successfully migrates documentation, fixing 91% of issues automatically
while maintaining full control throughout the process.

ðŸ¤– Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>
"

- sha: "015e6fb9cb6076f35ab76f202da5dd385877c821"
  date: "July 27, 2025"
  author: "GitHub Action"
  subject: "Update recent commits data [skip ci]"
  body: ""

- sha: "36dd95fe92f1dca8198e044c6b9425c4f34f3e03"
  date: "July 27, 2025"
  author: "Rolfe Dlugy-Hegwer"
  subject: "Fix blog post chronological ordering and add timestamp automation"
  body: "This commit resolves blog post sorting issues by correcting filenames and
timestamps to reflect actual creation times, and adds automation to prevent
future timestamp mismatches.

## Blog Post Timestamp Fixes

### Corrected Chronological Order (July 27, 2025)
- 07:23 - I Finally Speak a Programming Language
- 08:32 - Setting Up GitHub Pages
- 08:45 - Minima vs Just the Docs
- 08:48 - Organizing Blog Assets with Claude
- 18:11 - Implementing Vale AsciiDocDITA Container Integration (Phase 0)
- 18:11 - Implementing Phase 1: Core Infrastructure (Phase 1)

### Filename Updates
- Added HHMM time prefix to all filenames for chronological sorting
- Updated from 2025-01-27-* to 2025-07-27-HHMM-* format
- Example: 2025-07-27-0723-i-finally-speak-a-programming-language.md

### Timestamp Updates
- Updated all front matter with precise timestamps including timezone
- Format: YYYY-MM-DD HH:MM:SS -0400 (EDT)
- Matches actual file creation times from filesystem

## Automation and Prevention

### Blog Post Creation Script
- Added scripts/new-blog-post.sh for automated post creation
- Generates correct filename: YYYY-MM-DD-HHMM-post-title.md
- Creates proper timestamp in front matter with current timezone
- Uses template as starting point with helpful instructions

### Updated Template
- Enhanced docs/_posts/YYYY-MM-DD-post-template.md with detailed guidelines
- Added filename and timestamp format instructions
- Included quick reference commands for manual creation
- Updated timezone to EDT (-0400)

### Documentation Updates
- Updated CLAUDE.md with automated and manual blog post creation guidelines
- Added scripts/README.md documenting utility scripts
- Clear examples and best practices for future posts

## Benefits
- Jekyll now sorts posts chronologically, not alphabetically by title
- Accurate development timeline visible on blog
- Eliminates human error in date/time formatting
- Future-proof automation for consistent blog post creation
- Proper timezone handling for all timestamps

ðŸ¤– Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>
"
