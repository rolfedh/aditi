# Recent commits data for Jekyll
# Auto-generated by GitHub Actions
commits:
- sha: "593d0a3cc4ebae1801a0388b8e0fac9adaf037bb"
  date: "July 30, 2025"
  author: "Rolfe Dlugy-Hegwer"
  subject: "Summary: Adding and Debugging the Recheck Feature"
  body: "  What Was Implemented

  I added an intermediate "Recheck for issues" step in the Aditi
  journey workflow to address
  https://github.com/rolfedh/aditi/issues/12. The new flow is:

  1. Apply rule fixes/flags
  2. NEW: Ask "? Recheck for issues before continuing to next
  rule? (Y/n)"
  3. If Yes → Re-run Vale to verify fixes worked
  4. Ask "? Continue with next rule? (Y/n)"

  Key Implementation Details

  1. Created recheck_rule_violations() function that:
    - Re-runs Vale with only the specific rule enabled
    - Shows remaining violation count
    - Lists files that still have issues in the same format as the
   original display
  2. Created recheck_and_continue_prompt() function that:
    - Prompts user to recheck (default: Yes)
    - Calls recheck function if user agrees
    - Then prompts to continue with next rule
  3. Updated process_single_rule() to:
    - Use recheck_and_continue_prompt() when fixes are applied
    - Keep using simple continue_prompt() when user skips

  Debugging Journey

  1. First Issue: Vale couldn't find files
    - Problem: Passing absolute paths to Vale running in container
    - Fix: Convert to relative paths using
  path.relative_to(Path.cwd())
  2. Second Issue: 'ValeContainer' object has no attribute
  'check_files'
    - Problem: Tried to use non-existent method
    - Fix: Use vale_container.run_vale_single_rule() instead
  3. Third Issue: 'Violation' object has no attribute 'rule'
    - Problem: Wrong attribute name
    - Fix: Changed v.rule to v.rule_name

  Final Implementation

  The recheck function now:
  - Uses the same Vale execution pattern as the original rule
  processing
  - Properly converts file paths for container execution
  - Parses Vale output using existing parser
  - Displays results in familiar format: "These files have this
  issue:"
  - Shows "✅ No remaining issues" or "⚠️ X issue(s) still remain"

  This gives users confidence that automatic fixes worked before
  moving to the next rule.
"

- sha: "002c430d1d496cf87b5033263a5cadc729c4f244"
  date: "July 30, 2025"
  author: "Rolfe Dlugy-Hegwer"
  subject: "refactor: update directory selection to use numbered input for clarity"
  body: ""

- sha: "9220127343edc53c00948f7dc459be21cdfabc8a"
  date: "July 30, 2025"
  author: "GitHub Action"
  subject: "Update recent commits data [skip ci]"
  body: ""

- sha: "f61889a8d4716811b4810b84c37864448db81cf8"
  date: "July 30, 2025"
  author: "Rolfe Dlugy-Hegwer"
  subject: "Now the directory selection UI will be clearer:"
  body: "  - ✓ (green checkmark) for selected directories
  - ○ (gray circle) for unselected directories
  - ❯ (arrow) to show which item is currently highlighted

  This makes it much clearer what's selected versus unselected.
  The styling provides visual contrast:
  - Selected items: Green checkmarks with white text
  - Unselected items: Gray circles
  - Current selection: White bold text with arrow indicator

  The UI should now be much more accessible and clear about which
  directories are selected for processing.
"

- sha: "55fe79f7505336853995db49e5d2e19da69b68ab"
  date: "July 30, 2025"
  author: "GitHub Action"
  subject: "Update recent commits data [skip ci]"
  body: ""
