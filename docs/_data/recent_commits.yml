# Recent commits data for Jekyll
# Auto-generated by GitHub Actions
commits:
- sha: "ff4dd71a07fd3dcb621e7d3cc7d5e7d35258d3b9"
  date: "July 29, 2025"
  author: "Rolfe Dlugy-Hegwer"
  subject: "feat: Complete user documentation and technical debt improvements"
  body: "## Documentation
- Added comprehensive Quick Start Guide with troubleshooting section
- Created example AsciiDoc files demonstrating all 27 rules
- Prepared professional announcement blog post for release
- Enhanced README with emojis, clear sections, and future roadmap

## GitHub Issue Templates
- Added bug report template with structured fields
- Created feature request template with use cases
- Added user feedback template for migration experiences
- Configured issue template settings with help links

## Technical Improvements
- Fixed duplicate dependencies in CLAUDE.md auto-generation
- Added dynamic --version flag reading from pyproject.toml
- Implemented --dry-run support for journey command
- Enhanced progress indicators with time estimates and file counts

## Error Message Improvements
- Better path validation errors with actionable guidance
- Clear instructions when paths are not configured
- Improved file validation for empty/corrupted files
- User-friendly messages that explain how to fix issues

All tests passing (126/126) with improved coverage.

ðŸ¤– Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>
"

- sha: "1eb90c7a13da70ea609468d2a9f68154d3b2a582"
  date: "July 29, 2025"
  author: "GitHub Action"
  subject: "Update recent commits data [skip ci]"
  body: ""

- sha: "6f17fef4f58b8f5280bbcc58158f25b48fd0ba83"
  date: "July 29, 2025"
  author: "Rolfe Dlugy-Hegwer"
  subject: "fix: Improve error messages and edge case handling for production readiness"
  body: "- Enhanced path validation errors with actionable guidance in check and fix commands
- Added comprehensive file validation for empty, corrupted, and unreadable AsciiDoc files
- Improved error messages to show allowed paths and clear next steps
- Added file accessibility checks with detailed error reporting
- Created comprehensive test suite for signal handling verification
- Verified interruption handling (Ctrl+C) works correctly during operations
- All error messages now provide clear guidance instead of cryptic warnings

Addresses UX issues identified during end-to-end testing with production-ready improvements.

ðŸ¤– Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>
"

- sha: "612772cffeba1486b191b4bb0021cdfb288c460b"
  date: "July 29, 2025"
  author: "GitHub Action"
  subject: "Update recent commits data [skip ci]"
  body: ""

- sha: "4ed6ab0229a0c78497181ffca1e4f22396a599a5"
  date: "July 29, 2025"
  author: "Rolfe Dlugy-Hegwer"
  subject: "perf: Comprehensive performance optimizations and edge case handling"
  body: "Implemented extensive performance improvements and robust error handling
across the entire Aditi codebase for production-ready reliability.

Performance Optimizations:
- Vale container image caching to eliminate redundant pulls (~50% faster startup)
- Resource limits (512MB memory, 2 CPU cores) with 5-minute timeouts
- Parallel file processing with ThreadPoolExecutor (up to 4 workers, ~3x faster)
- File content caching to avoid repeated reads
- Security hardening with read-only mounts and privilege restrictions

Edge Case Handling:
- Comprehensive file system permission checks and access validation
- Safe filename validation blocking dangerous characters and patterns
- Unicode encoding fallback strategies (UTF-8 â†’ latin-1)
- 10MB file size limits to prevent memory exhaustion
- Path validation ensuring files stay within project boundaries

Robustness Improvements:
- Graceful signal handling (SIGINT/SIGTERM) with cleanup functions
- Thread-safe interruption checking with partial result preservation
- Rule registry caching to avoid repeated auto-discovery
- Detailed error messages with non-fatal warning system
- Batch processing with intelligent limits to avoid command line issues

Real-World Readiness:
- Handles large documentation repositories efficiently
- Graceful recovery from individual file failures
- Production-ready error handling for CI/CD integration
- User-friendly interruption with preserved partial work

Created comprehensive documentation in PERFORMANCE_OPTIMIZATIONS.md
and updated todo priorities for next development phase.

ðŸ¤– Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>
"
