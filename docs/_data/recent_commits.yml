# Recent commits data for Jekyll
# Auto-generated by GitHub Actions
commits:
- sha: "41d42b01a633bfd991afef31f08cdef13b780265"
  date: "July 31, 2025"
  author: "Rolfe Dlugy-Hegwer"
  subject: "Based on my analysis of the upstream commits from Vale issue #98, I've successfully implemented the following improvements to our EntityReference rule:"
  body: "  1. Support for +normal Substitution Pattern

  The upstream commits showed that Vale now recognizes subs="+normal" as enabling entity replacements. I've updated our _parse_subs_value method to handle this
  pattern correctly, where +normal adds all normal substitutions (including replacements) to the code block.

  2. Proper Handling of -replacements Modifier

  The upstream implementation checks for explicit disabling of replacements with -replacements. Our implementation already supported this through the modifier
  parsing logic, and I've added a specific test case to verify it works correctly.

  3. Enhanced Test Coverage

  I've added two new test cases:
  - test_subs_plus_normal_fixes: Verifies that subs="+normal" enables entity fixing
  - test_subs_minus_replacements_no_fix: Verifies that subs="normal,-replacements" disables entity fixing

  4. Updated Documentation

  I've enhanced the documentation in ENTITY_REFERENCE_HANDLING.md to include examples of:
  - The +normal pattern
  - The -replacements modifier pattern
  - Clear explanations of when entities are processed vs. remain literal

  Key Improvements Summary:

  - âœ… Entities in code blocks with subs="+normal" are now correctly converted
  - âœ… Entities in code blocks with subs="normal,-replacements" remain literal
  - âœ… The rule respects AsciiDoc's substitution model more accurately
  - âœ… 13 out of 14 tests pass (nested code blocks remain a known limitation)

  The implementation now aligns more closely with the upstream Vale rules while maintaining our Aditi-specific logic for automatic fixing.
"

- sha: "4d45a658bcad164cbb74f9f76199b69d2fff33ab"
  date: "August 01, 2025"
  author: "GitHub Action"
  subject: "Update recent commits data [skip ci]"
  body: ""

- sha: "eaaf3d280a1ba91816adaf8a2eb1d8ad71977505"
  date: "July 31, 2025"
  author: "Rolfe Dlugy-Hegwer"
  subject: "feat: EntityReference rule now respects AsciiDoc subs attributes"
  body: "- Check code block subs attribute to determine if entities should be processed
- Only fix entities in code blocks when subs includes "replacements"
- Respect subs="none", subs="attributes+", subs="normal" etc.
- Add comprehensive tests for different subs scenarios
- Add documentation explaining the behavior

This ensures that:
- Code examples preserve literal entities by default
- Users can opt-in to entity processing with subs="replacements"
- Aditi follows AsciiDoc's substitution model correctly

Related to upstream issue jhradilek/asciidoctor-dita-vale#98
Addresses rolfedh/aditi#13

ðŸ¤– Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>
"

- sha: "9aa6c5c00e0bed4a0bd197998e0da4d035bebd64"
  date: "July 31, 2025"
  author: "GitHub Action"
  subject: "Update recent commits data [skip ci]"
  body: ""

- sha: "d60e9570f6f585776178a13628afca403860ced8"
  date: "July 31, 2025"
  author: "Rolfe Dlugy-Hegwer"
  subject: "feat: Implement single-source versioning"
  body: "- Version now maintained only in pyproject.toml
- __init__.py dynamically reads version from pyproject.toml
- Tests no longer hardcode version numbers
- Add release.py script for complete release automation
- Add bump-version.py for simple version updates
- Update scripts README with new tools

The release.py script automates the entire release process:
1. Bump version (major/minor/patch)
2. Run tests
3. Build and upload to PyPI
4. Create git commit and tag
5. Create GitHub release

This eliminates the need to update version in multiple places.

Fixes #18

ðŸ¤– Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>
"
