# Recent commits data for Jekyll
# Auto-generated by GitHub Actions
commits:
- sha: "7a50a91ef1bb8b85d795d9b537f19f4565481fd4"
  date: "July 27, 2025"
  author: "Rolfe Dlugy-Hegwer"
  subject: "Complete Phase 1: Core Infrastructure Implementation"
  body: "This commit represents the successful completion of Phase 1, transforming
Aditi from a proof-of-concept into a complete CLI framework with modern
Python packaging and comprehensive infrastructure.

## Key Achievements

### Core Infrastructure
- Modern Python packaging with pyproject.toml
- Complete CLI framework using Typer with Rich output
- Configuration management with Pydantic models and JSON persistence
- Git workflow guidance module (non-invasive)
- Comprehensive test suite with 94% success rate (34/36 tests)

### Package Structure
- Proper Python package with __init__.py and exports
- Entry point configuration for CLI commands
- Type checking support with py.typed marker
- Development dependencies and tool configurations

### CLI Functionality
- Working `aditi --help` with comprehensive command documentation
- Version display with `aditi --version`
- Functional `aditi init` command through proper CLI structure
- Placeholder commands for check, fix, and journey with helpful messages
- Verbose logging and error handling

### Testing Infrastructure
- Unit tests for config and git modules
- Integration tests for CLI functionality
- Shared fixtures for temporary directories and git repositories
- Proper mocking for external dependencies

### Documentation
- Updated design documents reflecting Phase 1 completion
- Created Phase 2 implementation roadmap
- Blog post documenting Phase 1 achievements and lessons learned
- Comprehensive architecture documentation

## Phase 1 Success Criteria Met
âœ… `pip install -e .` - Package installs successfully
âœ… `aditi --help` - Shows all commands with descriptions
âœ… `aditi --version` - Displays version 0.1.0
âœ… `aditi init` - Initializes Vale configuration properly
âœ… Configuration load/save - Working with ~/aditi-data/config.json
âœ… Placeholder commands - All show expected messages

## Files Added/Modified
- pyproject.toml: Modern Python packaging configuration
- src/aditi/cli.py: Main CLI application with Typer
- src/aditi/config.py: Configuration management with Pydantic
- src/aditi/git.py: Git workflow guidance
- src/aditi/__init__.py: Package structure and exports
- tests/: Comprehensive test suite with fixtures
- docs/: Updated design documents and Phase 2 roadmap

Ready for Phase 2: Rule Engine Implementation

ðŸ¤– Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>
"

- sha: "1f2a5acce3b5cd93335ad1b87d358328d26fe815"
  date: "July 27, 2025"
  author: "GitHub Action"
  subject: "Update recent commits data [skip ci]"
  body: ""

- sha: "fe5a7cf3036bee2e07554a22c2ef01f7a9c292f3"
  date: "July 27, 2025"
  author: "Rolfe Dlugy-Hegwer"
  subject: "Fix broken links and add prevention guidelines"
  body: "- Fix broken internal links in Vale integration blog post
- Add Jekyll front matter to container-setup-tasks.md
- Update implementation plan to mark Phase 0 as complete
- Update todo list with Phase 0 completion status
- Add comprehensive Jekyll URL guidelines to CLAUDE.md
- Update blog post template with link prevention reminders
- Create Phase 1 next steps guide

Link fixes:
- /design/claude-code-todo-list/ â†’ /aditi/design/claude-code-todo-list/
- /design/container-setup-tasks/ â†’ /aditi/design/container-setup-tasks/

Prevention measures:
- Clear URL patterns and examples in CLAUDE.md
- HTML comments in blog post template with correct formats
- Explanation of /aditi/ baseurl requirement

ðŸ¤– Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>
"

- sha: "a288c5ca2f181c06cb77ea762482198cf67609b4"
  date: "July 27, 2025"
  author: "GitHub Action"
  subject: "Update recent commits data [skip ci]"
  body: ""

- sha: "64062d5286764f47eed4dbfab69c5f8291c039e3"
  date: "July 27, 2025"
  author: "Rolfe Dlugy-Hegwer"
  subject: "Implement Vale container integration with AsciiDocDITA rules"
  body: "- Add ValeContainer class for Podman/Docker runtime management
- Implement automatic Vale image pulling and container lifecycle handling
- Create Vale configuration template with AsciiDocDITA package integration
- Add init command for seamless project setup with progress indicators
- Switch from custom container to official Vale image with package system
- Include comprehensive test scripts for validation
- Add container setup documentation and implementation guide
- Write blog post documenting the implementation journey

ðŸ¤– Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>
"
